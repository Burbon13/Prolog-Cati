/* ============== Tests ex2 ============== */
/* To run the tests copy all of the code below this line and run it. */
/* If the result is True, yay, all tests passed. */

/* right_neighbour */
right_neighbour([[1,2,3,0,4,5,6,7,8,9,10,11,12,13,14,15], 4], -1),
right_neighbour([[1,2,3,4,5,6,7,0,8,9,10,11,12,13,14,15], 8], -1),
right_neighbour([[1,2,3,4,5,6,7,8,9,10,11,0,12,13,14,15], 12], -1),
right_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0], 16], -1),
right_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,15], 15], [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0], 16]),
right_neighbour([[1,2,3,4,5,6,0,7,8,9,10,11,12,13,14,15], 7], [[1,2,3,4,5,6,7,0,8,9,10,11,12,13,14,15], 8]),
right_neighbour([[1,2,3,4,5,6,7,8,9,10,0,11,12,13,14,15], 11], [[1,2,3,4,5,6,7,8,9,10,11,0,12,13,14,15], 12]),
right_neighbour([[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 1], [[1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 2]),
not(right_neighbour([[1,2,3,4,0,5,6,7,8,9,10,11,12,13,14,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(right_neighbour([[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(right_neighbour([[1,2,3,0,4,5,6,7,8,9,10,11,12,13,14,15], 4], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(right_neighbour([[1,2,3,4,5,6,7,8,0,9,10,11,12,13,14,15], 9], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(right_neighbour([[1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),

/* top_neighbour */
top_neighbour([[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 1], -1),
top_neighbour([[1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 2], -1),
top_neighbour([[1,2,0,3,4,5,6,7,8,9,10,11,12,13,14,15], 3], -1),
top_neighbour([[1,2,3,0,4,5,6,7,8,9,10,11,12,13,14,15], 4], -1),
top_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12]),
top_neighbour([[1,2,3,4,5,6,0,7,8,9,10,11,12,13,14,15], 7], [[1,2,0,4,5,6,3,7,8,9,10,11,12,13,14,15], 3]),
top_neighbour([[1,2,3,4,5,6,7,8,9,10,0,11,12,13,14,15], 11], [[1,2,3,4,5,6,0,8,9,10,7,11,12,13,14,15], 7]),
top_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,15], 15], [[1,2,3,4,5,6,7,8,9,10,0,12,13,14,11,15], 11]),
not(top_neighbour([[1,2,3,4,0,5,6,7,8,9,10,11,12,13,14,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(top_neighbour([[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(top_neighbour([[1,2,3,0,4,5,6,7,8,9,10,11,12,13,14,15], 4], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(top_neighbour([[1,2,3,4,5,6,7,8,0,9,10,11,12,13,14,15], 9], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),
not(top_neighbour([[1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,0,13,14,15,12], 12])),

/* left_neighbour */
left_neighbour([[1,2,3,4,5,6,0,7,8,9,10,11,12,13,14,15], 7], [[1,2,3,4,5,0,6,7,8,9,10,11,12,13,14,15], 6]),
left_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0], 16], [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,15], 15]),
left_neighbour([[1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 2], [[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 1]),
left_neighbour([[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 1], -1),
left_neighbour([[1,2,3,4,0,5,6,7,8,9,10,11,12,13,14,15], 5], -1),
left_neighbour([[1,2,3,4,5,6,7,8,0,9,10,11,12,13,14,15], 9], -1),
left_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,0,13,14,15], 13], -1),
not(left_neighbour([[1,2,3,4,5,6,7,0,8,9,10,11,12,13,14,15], 7], [[1,2,3,4,5,0,6,7,8,9,10,11,12,13,14,15], 6])),
not(left_neighbour([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,15], 16], [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,15], 15])),
not(left_neighbour([[1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 2], [[0,1,22,3,4,5,6,7,8,9,10,11,12,13,14,15], 1])),
not(left_neighbour([[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 1], [[0,1,22,3,4,5,6,7,8,9,10,11,12,13,14,15], 1])),

/* swap_elems */
swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 3, 5, [1, 2, 5, 4, 3, 6, 7, 8, 9]),
swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 1, 9, [9, 2, 3, 4, 5, 6, 7, 8, 1]),
swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 4, 5, [1, 2, 3, 5, 4, 6, 7, 8, 9]),
swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 5, 4, [1, 2, 3, 5, 4, 6, 7, 8, 9]),
swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 2, 3, [1, 3, 2, 4, 5, 6, 7, 8, 9]),
not(swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 2, 3, [1, 2, 2, 3, 5, 6, 7, 8, 9])),
not(swap_elems([1, 2, 3, 4, 5, 6, 7, 8, 9], 8, 3, [1, 2, 2, 3, 5, 6, 7, 8, 9])),

/* get_elem_at */
get_elem_at([1, 2, 3, 5], 1, 1),
get_elem_at([1, 2, 3, 5], 2, 2),
get_elem_at([1, 2, 3, 5], 3, 3),
get_elem_at([1, 2, 3, 5], 4, 5),
not(get_elem_at([1, 2, 3, 5], 0, 5)),
not(get_elem_at([1, 2, 3, 5], 40, 5)),

/* set_elem_at */
set_elem_at([0 ,0, 0, 0], 2, 69, [0, 69, 0, 0]),
not(set_elem_at([0 ,0, 0, 0], 2, 69, [0, 69, 0, 1])),
set_elem_at([1, 2, 60, 70], 1, 69, [69, 2, 60, 70]),
set_elem_at([1, 2, 60, 70], 4, 69, [1, 2, 60, 69]),

/* state */
state([[1,3,6,9,10,2,13,15,14,7,0,5,8,4,11,12], 11]),
state([[1,3,6,0,10,2,13,15,14,7,9,5,8,4,11,12], 4]),
state([[1,3,6,9,10,2,13,15,14,7,12,5,8,4,11,0], 16]),
state([[0,3,6,9,10,2,13,15,14,7,1,5,8,4,11,12], 1]),
not(state([[1,3,6,9,10,2,13,15,14,7,0,5,8,4,11,12], 10])),
not(state([[1,3,6,9,10,2,13,15,14,7,0,5,8,4,11,12,13], 11])),
not(state([[1,3,6,9,10,2,13,15,14,7,0,5,8,4,12], 11])),
not(state([[1,3,6,9,10,2,13,15,14,7,0,5,8,4,11,11], 11])),

/* list_contains */
not(list_contains([1,2,3,4],0)),
list_contains([1,2,3,4],1),
list_contains([1,2,3,4],4),
not(list_contains([1,2,3,4],44)),

/* empty_cell_correct_position */
empty_cell_correct_position([1, 3, 6, 9, 10, 2, 13, 15, 14, 7, 0, 5, 8, 4, 11, 12], 11),
not(empty_cell_correct_position([1, 3, 6, 9, 10, 2, 13, 15, 14, 7, 0, 5, 8, 4, 11, 12], 12)),
not(empty_cell_correct_position([1, 3, 6, 9, 10, 2, 13, 15, 14, 7, 0, 5, 8, 4, 11, 12], 10)),
empty_cell_correct_position([0,2,3],1),
empty_cell_correct_position([1,0,3],2),
empty_cell_correct_position([1,2,0],3),
not(empty_cell_correct_position([1,0,3],-2)),
not(empty_cell_correct_position([1,0,3],20)),
not(empty_cell_correct_position([1,1,3],2)),

/* valid_value */
valid_value(0),
valid_value(6),
not(valid_value(-4)),
valid_value(15),
not(valid_value(20)),
not(valid_value(16)),

/* list_contains_right_values */
list_contains_right_values([1, 3, 6, 9, 10, 2, 13, 15, 14, 7, 0, 5, 8, 4, 11, 12]),
list_contains_right_values([11, 10, 3, 5, 9, 2, 12, 1, 14, 13, 4, 8, 6, 7, 0, 15]),
list_contains_right_values([9, 0, 14, 3, 6, 15, 12, 5, 7, 1, 11, 8, 10, 13, 4, 2]),
list_contains_right_values([3, 1, 11, 15, 13, 9, 12, 4, 6, 8, 7, 5, 2, 14, 0, 10]),
list_contains_right_values([5, 10, 8, 12, 13, 9, 0, 15, 11, 2, 7, 4, 6, 1, 14, 3]),
list_contains_right_values([2, 14, 3, 7, 12, 10, 6, 15, 13, 9, 1, 4, 8, 0, 11, 5]),
list_contains_right_values([10, 13, 11, 0, 15, 1, 4, 6, 12, 14, 5, 9, 3, 7, 8, 2]),
not(list_contains_right_values([1, 3, 6, 9, 10, 22, 13, 15, 14, 7, 0, 5, 8, 4, 11, 12])),
not(list_contains_right_values([11, 10, 3, 5, 8, 2, 12, 1, 14, 13, 4, 8, 6, 7, 0, 15])),
not(list_contains_right_values([9, 0, 14, 3, 6, 15, 12, 5, 7, 1, 11, 8, 10, 13, 4, 20])),
not(list_contains_right_values([3, 1, 11, 15, 13, 9, 12, 4, 6, 8, 7, 5, 2, 14, 0, 0])),
not(list_contains_right_values([5, 10, 8, 12, 13, 9, 0, 15, 11, 2, 7, 4, 6, 1, 14, 3, 16])),
not(list_contains_right_values([7, 12, 10, 6, 15, 13, 9, 1, 4, 8, 0, 11, 5])),
not(list_contains_right_values([10, 13, 11, 15, 1, 4, 6, 12, 14, 5, 9, 3, 7, 8, 2])).
